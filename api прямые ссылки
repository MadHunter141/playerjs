Документация по API
Для того, чтобы получить информацию о файле и ссылки для просмотра требуется направить запрос на адрес вашего плеера добавив /link_file.php с GET или POST параметрами. Обязательно указание вашего секретного токена, который можно найти в настройках профиля.

Пример URL запроса для фильма:
https://neck-as.allarknow.online/direct?secret_token=yourtoken&kp=1056155&ip=8.8.8.8&season=2&episode=3&translation=3

Пример URL запроса для трейлера:
https://neck-as.allarknow.online/direct/trailer?secret_token=yourtoken&trailer&kp=1122117&ip=8.8.8.8&number=1&translation=66

Список параметров, которые Вы можете использовать:
kp - ID Кинопоиска

imdb - ID IMDB

tmdb - ID TMDB

world_art - ID World Art

token_movie - token фильма

name - любое название фильма/сериала (на русском, оригинальное, альтернативное), как Вам удобно

year - год выхода фильма/сериала

translation - id озвучки. (Обязательный)

season - нужный сезон. (Обязательный для сериалов)

episode - нужная серия. (Обязательный для сериалов или фильмов где есть несколько серий)

number - номер трейлера. (Обязательный если хотите получить трейлер)

directors_cut - параметр необходим если вы хотите получить режиссерскую версию фильма.

ip - IP пользователя, которому будет показана ссылка, с неверным IP у пользователя не будет работать ссылка. (Обязательный)

Для максимально точного поиска главное условие - Token фильма или Кинопоиск ID, или IMDB, или World Art ID в вашей базе. Если происходит поиск по названию или названию и году, то будет возвращен первый попавшийся результат из нашей базы.

Типы ответов API для фильмов:
API возвращает ответ в формате JSON. Если при запросе произошла ошибка, например, информация не найдена или ошибка в токене, то будет код ответа 404, при успешном ответе будет код 200.

Если запрос успешен, то вернется подобный ответ:

{
    'status': "success",
    'data': {
        'seasons': 0, // Номер сезона для сериала.
        'episode': 0, // Номер серии для сериала.
        'number': 0, // Номер трейлера для трейлера.
        'translation': '', // Название озвучки файла.
        'id_translation': '', // id озвучки файла.
        'quality': '', // Название качества файла.
        'id_quality': '', // id качества файла.
        'directors_cut': '', // Вернет true если файл является режиссерской версией или расширенной, если нет то false
        'available_directors_cut': '', // Вернет true если у фильма есть режиссерская версия, если нет то false
        'uhd': '', // Сообщает о наличии 4К в данном файле
        'file': {
            'default_audio': '', // Название озвучки в самом видео файле, который необходимо выбрать по умолчанию, если автоматически выбирается верная возвратит NULL.
            'default_subtitle': '', // Название субтитров в самом видео файле, которые необходимо выбрать по умолчанию, если не указано вернет NULL.
            'skipTime': '', // Время в секундах которое можно пропустить из-за наличия рекламы или заставки.
            'removeTime': '', // Время в секундах которое нужно удалить из-за наличия рекламы.
            'hlsSource': [ // Массив объектов ссылок на манифесты качеств и озвучек видео.
                {
                    'label': '', // Название аудио дороги.
                    'default': true, // Если есть этот параметр, данную озвучку нужно использовать по умолчанию.
                    'quality': { // Список качеств с ссылками.
                        ...
                    }
                },
            ],
            'tracks': [ // Массив объектов ссылок на субтитры к видео.
                {
                    'kind': 'captions',
                    'label': '', // Название субтитров.
                    'src': '', // Ссылка на субтитры.
                    'default': true, // Если есть этот параметр, данные субтитры нужно использовать по умолчанию.
                    'language': '' // Язык субтитров.
                },
            ],
        },
    }
}
Работа с кодеками видео файлов:
В ключе data.file.hlsSource вы получаете массив аудио-дорожек и информацию о доступных качествах. Все файлы с разрешением до 1080p включительно используют кодек h264, который поддерживается максимальным количеством устройств. Если вы хотите предоставить пользователям доступ к 4K, необходимо предварительно проверить, поддерживает ли устройство кодек av1. Кодек av1 не поддерживается некоторыми устройствами, включая iPhone, iPad и браузер Safari на macOS. Поэтому, если вы хотите предоставлять 4K качество для пользователей, необходимо с помощью JS API проверить поддерживаемый кодек и подставить соответствующую ссылку.

Для того чтобы узнать поддерживает устройство кодек av1, необходимо использовать для современных устройств: mediaCapabilities API, а для старых canPlayType() (второй вариант дает только опосредованное представление о поддержке, поэтому его лучше использовать как fallback, когда новое API не поддерживается).

Пример использования:

let av1Support = false;
if ("mediaCapabilities" in navigator) {
    navigator.mediaCapabilities.decodingInfo({
        type: 'file',
        audio: {
            contentType: 'audio/mp4;codecs=mp4a.40.2',
            channels: 2,
            bitrate: 320000,
            samplerate: 48000
        },
        video: {
            contentType: 'video/mp4;codecs=av01.0.12M.08',
            height: 2160,
            width: 3840,
            framerate: 60,
            bitrate: 11000000
        }
    }).then(function (result) {
        av1Support = result.supported && result.smooth ? true : false;
    });
} else {
    av1Support = document.querySelector('video').canPlayType('video/mp4;codecs=av01.0.12M.08'); // Необходимо, чтобы тег video присутствовал на странице в момент исполнения скрипта!
    av1Support = av1Support == 'probably' ? true : false;
}
